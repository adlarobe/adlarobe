/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package tablero_de_control;

import com.google.gson.Gson;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.security.KeyManagementException;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.ChartRenderingInfo;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.entity.StandardEntityCollection;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.xy.XYSeries;

/**
 *
 * @author Robert
 */
public class BuscadorDatosIA extends javax.swing.JFrame {

    /**
     * Creates new form BuscadorDatosIA
     */
     ImageIcon ii;                //not initialized  
    
    private DefaultTableModel dtm;
    
    public BuscadorDatosIA() {
        initComponents();
    }
    private void init(){
        
        this.btnBuscar.setIcon(this.getImageIcon(new File("./Imagenes/Icono_Buscar.jpg"))); 
    }
    
    public ImageIcon getImageIcon(File f)
    {


        try
        {
            Image im = ImageIO.read(f);


            ii = new ImageIcon(im);


        }
        catch(IOException i)
        {

            i.printStackTrace();


        }



        finally
        {

            return ii;

        }


    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();
        optExcel = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        txtPrompt = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(66, 69, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("BUSCARDOR DE DATOS EN LENGUAJE NATURAL CON IA");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 370, 40));

        jLabel2.setText("Ingrese datos:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel3.setText("Resultado:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, -1, -1));

        btnBuscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 80, 130, 40));

        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Campo 1", "Campo 2", "Campo 3", "Campo 4"
            }
        ));
        jScrollPane2.setViewportView(tblResultado);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 560, 230));

        optExcel.setText("Excel");
        getContentPane().add(optExcel, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 170, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 130, 40));

        txtPrompt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPromptActionPerformed(evt);
            }
        });
        getContentPane().add(txtPrompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 560, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String prompt = "";
        String resultado = "";
        String resultado2 = "";
        String url = "";
        String schema = "";
        String json = "";
        String token = "";
        String sql = "";
        Gson gson = new Gson();
        ResultSet rs1 = null;
        Statement stm1 = null;
        Connection con1 = null;
        DbConeccion db = null;
        ResultSetMetaData rsmd = null;
        
        prompt = this.txtPrompt.getText().trim();
        
        schema = this.construirSchemaBD();
        ConexionTest2 ct = new ConexionTest2();
                    
        try {
        
//        url = "curl -X POST 'https://www.text2sql.ai/api/sql/generate' \\" +
//            "-H 'Authorization: Bearer YOUR_API_KEY' \\" +
//            "-H 'Content-Type: application/json' \\" +
//            "-d '{" +
//            "      'prompt': ' " + prompt + "'," +
//            "      'type': 'plsql'," +
//            "      'schema': ' " + schema + "'," +
//            "      'boosted': false" +
//            "    }'";

        ////---Setar parametros para la conexi√≥n con la IA de Text2sql.ai     
        url = "https://www.text2sql.ai/api/sql/generate";
        json = "{" +
            "      \"prompt\": \" " + prompt.trim() + "\", " +
            //"      \"type\": \"postgres\", " +
            "      \"schema\": \" " + schema.trim() + "\", " +
            "      \"boosted\": false " +
            "    }";
        
        System.out.println("json enviado " + json);
        EscribirLog.escribirLog("BuscadorDatosIA.class", "json enviado " + json);
        
        //token = "11fb26d6d519869dfd770a859febf0a17c901db8ba1d80fe394e2d5c9c7c0a12"; //API KEY rjmadlan@gmail.com
        //token = "3cb542a234c5e0af74752b3897dfc0c99d3cdd3e39845baf9a4fbc23048d5390"; // API KEY profeholanda2002@gmail.com
        token = "b437cbc1d0481e73a0a6401e7035e9adf94ed78b86d367d6de50f4503f648e8f"; //API KEY manusanabria2024@gmail.com
        //token = "1cef13869ac16e682c2161f69745e59f96521808628e668bc3b3d819baf4f3aa"; //API KEY rjmadlan@msn.com
        //token = "ab342c60672516e6d9643324d2c103a054490d3492661afe0b58839f33750019"; //API KEY jesusanabria@hotmail.com
        
        ////---Invocar a la coneccion con la IA, y pasarle la url de la IA de Text2sql.ai, el json con el prompt en lenguaje natural y el schema de la BD
        resultado = ct.clientPost(url, json, token);
        System.out.println("Respuesta de la IA " + resultado);
        EscribirLog.escribirLog("BuscadorDatosIA.class", "Respuesta de la IA " + resultado);
        
        ////---Obtener el sql generado por la IA a partir del lenguaje natural que introdujo el usuario
        RespuestaSQL rsql = gson.fromJson(resultado, RespuestaSQL.class);
        
        sql = rsql.getOutput();
        System.out.println("SQL generado desde lenguaje natural: " + sql);
        EscribirLog.escribirLog("BuscadorDatosIA.class", "SQL generado desde lenguaje natural: " + sql);
        
        ////---Eliminar caracteres como por ejemplo \n del sql retornado antes de ejecutar en la BD
        sql = sql.replace("\n", " ");
        sql = sql.replace("`", "'");
        sql = sql.replace(";", " ");
        
        //Ejecutar el sql en la BD, y mostrar el resultado al usuario en pantalla
        //Coneccion a BD
        db = new DbConeccion();
        con1 = db.CrearConeccion("oracle", "desarrollo", "12345678");
        stm1 = con1.createStatement();
        
//        sql = " SELECT DISTINCT C.NOMBRES, c.APELLIDOS, c.NUMERO_DOCUMENTO, c.TIPO_PERSONA, c.FECHA_NACIMIENTO, c.FECHA_MODIFICACION, cu.SALDO " +
//        " FROM CLIENTE C JOIN CUENTA CU ON C.COD_CLIENTE = CU.COD_CLIENTE JOIN CONTRATO CO ON CU.COD_CUENTA = CO.COD_CUENTA JOIN CONTRATO_SERVICIO CS ON CO.COD_CONTRATO = CS.COD_CONTRATO JOIN SERVICIO S ON CS.COD_SERVICIO = S.COD_SERVICIO " +
//        " WHERE UPPER(S.DESCRIPCION) like '%PUNTO%' " +
//        " AND C.ACTIVO = 'S'  " +
//        " AND CS.ACTIVO = 'S'";
        
        rs1 = stm1.executeQuery(sql);
        rsmd = rs1.getMetaData();
        
         System.out.println("Cantidad de columnas: " + rsmd.getColumnCount());
         EscribirLog.escribirLog("BuscadorDatosIA.class", "Cantidad de columnas: " + rsmd.getColumnCount());
         
          //----Agregar Columnas al DataTable-----//
            dtm = new DefaultTableModel(){
                public boolean isCellEditable(int row, int column) {
                return false;
                }
            };
            
            for(int i = 1; i <= rsmd.getColumnCount(); i++){
                this.dtm.addColumn(rsmd.getColumnName(i));
                if(i >= 15) break;
            }
            
            Object[] ob = null;
         //--------------------------------------//
            
        int con = 0;    
        resultado2 = "";
        
        //---Mostrar Datos Obtenidos en el jTable---//
        while(rs1.next()){
            
            if(rsmd.getColumnCount() <= 15){
                ob = new Object[rsmd.getColumnCount()];
            }else{
                ob = new Object[15];
            }
            
            con++;
            for(int i = 1; i <= rsmd.getColumnCount(); i++){
                if(rs1.getObject(i) != null){
                    resultado2 = resultado2 + rs1.getObject(i).toString() + " | ";
                    //ob[0] = con;
                    ob[i-1] = rs1.getObject(i);
                                    
                }else{
                    resultado2 = resultado2 + " - " + " | ";
                }
                
                 //-----Agregar Filas al array del DataTable-----// 
               DecimalFormat formatea = new DecimalFormat("###,###,###,###.##"); 
//               ob[0] = con;
//               ob[1] = rs1.getString("agrupador");
//               ob[2] = formatea.format(rs1.getBigDecimal("facturado"));
//               ob[3] = formatea.format(rs1.getDouble("porc_fact"));
               
               if(i >= 15) break;
                       
               
               //------------------------------------//
               formatea = new DecimalFormat("###,###,###,###.##");
            } // fin for
            
            resultado2 = resultado2 + "\n";
            dtm.addRow(ob);
        } // fin while
        
                
        //this.txtResultadoConsulta.setText(resultado2);
        
        //---Mostrar DataTable ------//
             dtm.fireTableDataChanged();
            this.tblResultado.setModel(dtm);
            this.tblResultado.repaint();
         if(rsmd.getColumnCount() > 0) {
           for(int i = 1; i <= rsmd.getColumnCount(); i++){ 
                tblResultado.getColumnModel().getColumn(i).setResizable(false);
                tblResultado.getColumnModel().getColumn(i).setPreferredWidth(150);
                if(i >= 14) break;
           }
         }
           //----Fin Mostrar DataTable ----//
                      
        } catch (NoSuchAlgorithmException ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        } catch (KeyManagementException ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        } finally{
           
          try {
              if(stm1!=null)
                stm1.close();
              
              if(rs1!= null)
                  rs1.close();
              
              if(con1!=null)
                  con1.close();
              
          } catch (SQLException ex) {
              EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
              Logger.getLogger(FacturacionGral.class.getName()).log(Level.SEVERE, null, ex);
          }
        }
        
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            if(this.optExcel.isSelected() == true){
                WriteJTableToExcel wjte = new WriteJTableToExcel();
                wjte.exportToExcel(tblResultado, "./Reporte.xls");
            }
        } catch (Exception ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtPromptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPromptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPromptActionPerformed

    public String construirSchemaBD(){
        FileReader fr = null;
        String resultado = "";
        File archivo = null;
        BufferedReader br = null;
        
        try {
            
            archivo = new File ("./Configuraciones/Schema_BD.txt");
            fr = new FileReader (archivo);
            br = new BufferedReader(fr);
            String linea = "";
           while((linea=br.readLine())!=null){
                resultado = resultado + linea;
            }
           
           
           System.out.println("schema: " + resultado);
           //EscribirLog.escribirLog("BuscadorDatosIA.class", "schema: " + resultado); 
            
        } catch (FileNotFoundException ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
            Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fr.close();
                br.close();
            } catch (IOException ex) {
                EscribirLog.escribirLog("BuscadorDatosIA.class", ex.getMessage());
                Logger.getLogger(BuscadorDatosIA.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return resultado;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BuscadorDatosIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BuscadorDatosIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BuscadorDatosIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuscadorDatosIA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BuscadorDatosIA().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton optExcel;
    private javax.swing.JTable tblResultado;
    private javax.swing.JTextField txtPrompt;
    // End of variables declaration//GEN-END:variables
}
